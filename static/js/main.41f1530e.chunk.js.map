{"version":3,"sources":["components/ToolsBar/ToolsBar.module.scss","components/Salads/Salads.module.scss","components/Salads/SaladForm.module.scss","components/FormButtons/FormButtons.module.scss","components/Ingredients/Ingredients.module.scss","components/DeletePopup/DeletePopup.module.scss","components/Salads/SaladIngredientsList.module.scss","media/salad1.png","media/salad2.png","components/Loader/Loader.module.scss","components/Layout/TopBar.module.scss","components/FormInfo/FormInfo.module.scss","components/CheckListItem/CheckListItem.module.scss","components/Ingredients/IngredientsForm.module.scss","media/veg.png","components/Layout/Layout.module.scss","hooks/isMounted.js","hooks/AsyncSave.js","components/DeletePopup/DeletePopup.jsx","components/CaloriesNumber/CaloriesNumber.jsx","components/ListItem/ListItem.jsx","components/Salads/SaladIngredientsList.jsx","hooks/Input.js","constants/constants.js","components/ToolsBar/ToolsBar.jsx","services/saladService.js","components/Layout/Layout.jsx","components/Salads/saladsFilter.js","hooks/Fetching.js","hooks/Hover.js","components/Loader/Loader.jsx","components/EmptyPlaceholder/EmptyPlaceholder.jsx","components/Layout/TopBar.jsx","components/Salads/Salads.jsx","services/ingredientService.js","components/Salads/useCheckboxes.js","components/Ingredients/ingredientsFilter.js","components/FormButtons/FormButtons.jsx","components/FormInfo/FormInfo.jsx","components/CheckListItem/CheckListItem.jsx","hooks/Multiselect.js","hooks/FormStateChangeChecker.js","hooks/FormValidation.js","components/Salads/SaladForm.jsx","components/Salads/NewSalad.jsx","components/Salads/EditSalad.jsx","components/Ingredients/Ingredients.jsx","components/Ingredients/IngredientsForm.jsx","components/Ingredients/NewIngredient.jsx","components/Ingredients/EditIngredient.jsx","components/MenuBar/MenuBar.jsx","AppRouter.jsx","hooks/Toast.js","App.jsx","index.jsx","components/ListItem/ListItem.module.scss","components/MenuBar/MenuBar.module.scss"],"names":["module","exports","useIsMounted","isMounted","useRef","useEffect","current","setter","value","useAsyncSave","asyncSaveFn","callbackFN","validator","setStateIfMounted","useState","shouldSave","setShouldSave","loading","setLoading","a","response","asyncFetch","bind","DeletePopup","children","onDelete","isModalOpen","setModalOpen","closeModal","deleting","deleteItem","cloneElement","onClick","size","closeIcon","open","onClose","Content","Actions","className","styles","button","CaloriesNumber","num","props","Value","Label","getItemStyle","hovered","activeClassName","defaultStyle","item","activeStyle","hoverStyle","hover","ListItem","onMouseEnter","onMouseLeave","image","title","description","statistic","tags","onEdit","Image","src","Header","Description","Extra","floated","map","tag","key","icons","name","deleteIcon","defaultProps","undefined","SaladIngredientsList","activeSalad","ordered","ingredients","id","calories","Item","avatar","useInput","defaultValue","assignedValue","inputValue","setInputValue","includes","inputChangeHandler","event","ASC","ToolsBar","data","storeFilteredData","filterFn","searchTerm","searchTermHandler","tagFilter","tagFilterHandler","allUniqSaladTags","useMemo","length","reduce","ttl","curr","concat","uniq","filterBy","filterByHandler","sortType","setSortType","bar","placeholder","icon","onChange","selection","options","text","disabled","clearable","multi","sortBy","inline","circular","getSalads","axios","get","res","getSaladById","createSalad","post","updateSalad","put","deleteSalad","delete","Layout","tools","bottomLeft","bottomRight","bottom","celled","grid","Row","firstRow","Column","width","topFirstColumn","topSecondColumn","secondRow","bottomLeftColumn","caloriesReducer","saladsFilter","filter","toLowerCase","sort","b","result","itemA","itemB","localeCompare","useFetching","fetchFn","fetchOnQ","shouldFetch","setShouldFetch","setData","showLoader","shouldShowLoader","history","useHistory","fetch","withLoader","push","useHover","itemHovered","setItemHovered","Loader","active","inverted","loader","EmptyPlaceholder","filteredData","itemName","TopBar","left","right","topBar","Salads","salads","fetchSalads","activeSaladId","setActiveSaladId","find","filteredSalads","setFilteredSalads","mouseEnterHandler","activeHandler","editClickHandler","saladDeleteHandler","newBtn","label","basic","content","labelPosition","items","Group","divided","index","salad1","salad2","ingredient","join","getIngredients","getIngredientById","createIngredient","updateIngredient","deleteIngredient","getSaladIngredient","ingredientsArray","useCheckboxes","existingIngredients","alreadySelectedIngredients","saladIngredients","setSaladIngredients","checkIfSelected","newSaladIngredients","selectedIngredient","remove","ingredientsFilter","FormButtons","backBtnText","onBack","onSave","saving","saveDisabled","formButtons","saveBtn","FormInfo","infoPieces","columns","infoPeace","textParts","part","accentPart","CheckListItem","checkboxDisabled","checked","textAlign","verticalAlign","imageColumn","rounded","useMultiselect","defaultOptions","setOptions","ddValue","setDdValue","onAddItem","onDdValueChange","useFormStateChangeChecker","startingState","currentState","setSaveDisabled","isEqual","useSimpleFormValidation","errors","setErrors","useDeepCompareEffectNoCheck","isEmpty","noErrors","allErrors","Object","keys","forEach","inputName","SaladForm","mode","loadingIngredients","filteredIngredients","setFilteredIngredients","saladName","onSaladNameChange","saladTags","onSaladTagsChange","checkboxClickHandler","checkIfFormValid","creating","create","updating","update","Input","required","error","Select","search","multiple","allowAdditions","ingredientsLabel","checkList","NewSalad","EditSalad","match","params","salad","Ingredients","fetchIngredients","ingredientDeleteHandler","IngredientsForm","ingredientName","onIngredientNameChange","ingredienTags","onIngredienTagsChange","ingredientImage","onIngredientImageChange","ingredientCalories","onIngredientCaloriesChange","parseInt","fetchData","form","type","NewIngredient","EditIngredient","MenuBar","style","backgroundImage","vegetables","topTapeImage","secondary","menubar","as","firstColor","secondColor","thirdColor","Menu","position","NavLink","to","AppRouter","exact","path","component","from","useToast","activeToast","toastType","setToastType","toast","animation","time","getOptions","App","sendToast","interceptors","use","config","method","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41f1530e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"ToolsBar_bar__21wrZ\",\"multi\":\"ToolsBar_multi__jICmK\",\"sortBy\":\"ToolsBar_sortBy__3z5lw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Salads_active__3ojxp\",\"newBtn\":\"Salads_newBtn__3X1vF\",\"items\":\"Salads_items__lTZ-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"SaladForm_grid__249Ys\",\"ingredientsLabel\":\"SaladForm_ingredientsLabel__1LYJ_\",\"checkList\":\"SaladForm_checkList__2LaRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtons\":\"FormButtons_formButtons__10yIN\",\"saveBtn\":\"FormButtons_saveBtn__1EZgD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newBtn\":\"Ingredients_newBtn__JuKBA\",\"items\":\"Ingredients_items__38DGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"DeletePopup_button__1YBw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SaladIngredientsList_item__1Td5M\"};","module.exports = __webpack_public_path__ + \"static/media/salad1.87450046.png\";","module.exports = __webpack_public_path__ + \"static/media/salad2.f1c18255.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1H3_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"TopBar_topBar__2jtQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"FormInfo_grid__qp6NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageColumn\":\"CheckListItem_imageColumn__BBamS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"IngredientsForm_form__2LC4A\"};","module.exports = __webpack_public_path__ + \"static/media/veg.49f5403f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Layout_grid__3spY8\",\"firstRow\":\"Layout_firstRow__2blcQ\",\"topSecondColumn\":\"Layout_topSecondColumn__7B2rN\",\"topFirstColumn\":\"Layout_topFirstColumn__2hApE\",\"secondRow\":\"Layout_secondRow__1P3r0\",\"bottomLeftColumn\":\"Layout_bottomLeftColumn__aqtxU\",\"bottom\":\"Layout_bottom__ARrpT\"};","import { useRef, useEffect } from 'react';\r\n\r\nfunction useIsMounted() {\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => { isMounted.current = false; };\r\n  }, []);\r\n\r\n  function setStateIfMounted(setter, value) {\r\n    if (isMounted.current) {\r\n      setter(value);\r\n    }\r\n  }\r\n\r\n  return setStateIfMounted;\r\n}\r\n\r\nexport default useIsMounted;\r\n","import { useState, useEffect } from 'react';\r\nimport useIsMounted from './isMounted';\r\n\r\nfunction useAsyncSave(asyncSaveFn, callbackFN, validator = () => true) {\r\n  const setStateIfMounted = useIsMounted();\r\n  const [shouldSave, setShouldSave] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function asyncFetch() {\r\n      if (shouldSave) {\r\n        try {\r\n          setLoading(true);\r\n          let response = null;\r\n          if (validator()) {\r\n            response = await asyncSaveFn();\r\n          }\r\n          if (response) callbackFN();\r\n        } finally {\r\n          setStateIfMounted(setLoading, false);\r\n          setStateIfMounted(setShouldSave, false);\r\n        }\r\n      }\r\n    }\r\n    asyncFetch();\r\n  }, [shouldSave]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return [loading, setShouldSave.bind(null, true)];\r\n}\r\n\r\nexport default useAsyncSave;\r\n","import React, { useState, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'semantic-ui-react/dist/commonjs/modules/Modal/Modal';\r\nimport Button from 'semantic-ui-react/dist/commonjs/elements/Button/Button';\r\nimport useAsyncSave from '../../hooks/AsyncSave';\r\nimport styles from './DeletePopup.module.scss';\r\n\r\nconst DeletePopup = ({ children, onDelete }) => {\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const openModal = () => setModalOpen(true);\r\n  const closeModal = () => setModalOpen(false);\r\n  const [deleting, deleteItem] = useAsyncSave(onDelete, closeModal);\r\n  return (\r\n    <>\r\n      {cloneElement(children, { onClick: openModal })}\r\n      <Modal\r\n        size=\"mini\"\r\n        closeIcon\r\n        open={isModalOpen}\r\n        onClose={closeModal}\r\n      >\r\n        <Modal.Content>Are you sure?</Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={deleteItem}\r\n            className={styles.button}\r\n            loading={deleting}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nDeletePopup.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DeletePopup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistic from 'semantic-ui-react/dist/commonjs/views/Statistic/Statistic';\r\n\r\nconst CaloriesNumber = ({ num, ...props }) => (\r\n  <Statistic {...props}>\r\n    <Statistic.Value>\r\n      {num}\r\n    </Statistic.Value>\r\n    <Statistic.Label>Calories</Statistic.Label>\r\n  </Statistic>\r\n);\r\n\r\nCaloriesNumber.propTypes = {\r\n  num: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CaloriesNumber;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Item from 'semantic-ui-react/dist/commonjs/views/Item/Item';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon/Icon';\r\nimport Label from 'semantic-ui-react/dist/commonjs/elements/Label/Label';\r\nimport DeletePopup from '../DeletePopup/DeletePopup';\r\nimport CaloriesNumber from '../CaloriesNumber/CaloriesNumber';\r\nimport styles from './ListItem.module.scss';\r\n\r\nconst getItemStyle = (hovered, activeClassName) => {\r\n  const defaultStyle = styles.item;\r\n  const activeStyle = activeClassName || '';\r\n  const hoverStyle = hovered && !activeStyle ? styles.hover : '';\r\n  return `${defaultStyle} ${activeStyle} ${hoverStyle}`;\r\n};\r\n\r\nconst ListItem = ({\r\n  onClick, activeClassName, onMouseEnter, onMouseLeave, image,\r\n  title, description, statistic, tags, hovered, onEdit, onDelete\r\n}) => (\r\n  <Item\r\n    onClick={onClick}\r\n    className={getItemStyle(hovered, activeClassName)}\r\n    onMouseEnter={onMouseEnter}\r\n    onMouseLeave={onMouseLeave}\r\n  >\r\n    <Item.Image src={image} className={styles.image} />\r\n    <Item.Content>\r\n      <Item.Header>{title}</Item.Header>\r\n      {description && <Item.Description>{description}</Item.Description>}\r\n      <Item.Extra>\r\n        <CaloriesNumber num={statistic} floated=\"right\" />\r\n        {tags.map(tag => <Label key={tag}>{tag}</Label>)}\r\n      </Item.Extra>\r\n    </Item.Content>\r\n    {hovered && (\r\n    <div className={styles.icons}>\r\n      <Icon name=\"pencil\" size=\"large\" onClick={onEdit} />\r\n      <DeletePopup onDelete={onDelete}>\r\n        <Icon\r\n          name=\"trash alternate\"\r\n          size=\"large\"\r\n          className={styles.deleteIcon}\r\n        />\r\n      </DeletePopup>\r\n    </div>\r\n    )}\r\n  </Item>\r\n);\r\n\r\nListItem.defaultProps = {\r\n  onClick: undefined,\r\n  activeClassName: null,\r\n  description: null,\r\n  onDelete: undefined\r\n};\r\n\r\nListItem.propTypes = {\r\n  onClick: PropTypes.func,\r\n  activeClassName: PropTypes.string,\r\n  onMouseEnter: PropTypes.func.isRequired,\r\n  onMouseLeave: PropTypes.func.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  statistic: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  hovered: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from 'semantic-ui-react/dist/commonjs/elements/List/List';\r\nimport Label from 'semantic-ui-react/dist/commonjs/elements/Label/Label';\r\nimport Image from 'semantic-ui-react/dist/commonjs/elements/Image/Image';\r\nimport CaloriesNumber from '../CaloriesNumber/CaloriesNumber';\r\nimport styles from './SaladIngredientsList.module.scss';\r\n\r\nconst SaladIngredientsList = ({ activeSalad }) => (\r\n  <List ordered>\r\n    {activeSalad.ingredients.map(({\r\n      id, name, calories, image, tags\r\n    }) => (\r\n      <List.Item key={id} className={styles.item}>\r\n        <Image avatar src={image} />\r\n        <List.Content>\r\n          <List.Header>{name}</List.Header>\r\n          <List.Description>\r\n            {tags.map(tag => <Label key={tag} size=\"mini\">{tag}</Label>)}\r\n          </List.Description>\r\n        </List.Content>\r\n        <List.Content>\r\n          <CaloriesNumber num={calories} size=\"mini\" />\r\n        </List.Content>\r\n      </List.Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nSaladIngredientsList.propTypes = {\r\n  activeSalad: PropTypes.shape({\r\n    ingredients: PropTypes.arrayOf(PropTypes.shape({}))\r\n  }).isRequired\r\n};\r\n\r\nexport default SaladIngredientsList;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useInput = (defaultValue = '', assignedValue = null) => {\r\n  const [inputValue, setInputValue] = useState(defaultValue);\r\n\r\n  useEffect(() => {\r\n    if (![null, undefined].includes(assignedValue)) {\r\n      setInputValue(assignedValue);\r\n    }\r\n  }, [assignedValue]);\r\n\r\n  const inputChangeHandler = (event, { value }) => setInputValue(value);\r\n\r\n  return [inputValue, inputChangeHandler, setInputValue];\r\n};\r\n\r\nexport default useInput;\r\n","export const EDIT = 'edit';\r\nexport const CREATE = 'create';\r\n\r\nexport const CALORIES = 'calories';\r\nexport const NAME = 'name';\r\n\r\nexport const ASC = 'asc';\r\nexport const DESC = 'desc';\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { uniq } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport Input from 'semantic-ui-react/dist/commonjs/elements/Input/Input';\r\nimport Dropdown from 'semantic-ui-react/dist/commonjs/modules/Dropdown/Dropdown';\r\nimport Button from 'semantic-ui-react/dist/commonjs/elements/Button/Button';\r\nimport useInput from '../../hooks/Input';\r\nimport {\r\n  CALORIES, NAME, ASC, DESC\r\n} from '../../constants/constants';\r\nimport styles from './ToolsBar.module.scss';\r\n\r\nconst ToolsBar = ({ data, storeFilteredData, filterFn }) => {\r\n  const [searchTerm, searchTermHandler] = useInput();\r\n  const [tagFilter, tagFilterHandler] = useInput();\r\n  const allUniqSaladTags = useMemo(() => {\r\n    let tags = [];\r\n    if (data && data.length) {\r\n      tags = data.reduce((ttl, curr) => ttl.concat(curr.tags), []);\r\n    }\r\n    return uniq(tags);\r\n  }, [data]);\r\n  const [filterBy, filterByHandler] = useInput(CALORIES);\r\n  const [sortType, setSortType] = useState(DESC);\r\n\r\n  useEffect(() => {\r\n    storeFilteredData(data);\r\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (data && data.length) {\r\n      storeFilteredData(filterFn(data, {\r\n        searchTerm, tagFilter, filterBy, sortType\r\n      }));\r\n    }\r\n  }, [searchTerm, tagFilter, filterBy, sortType]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const sortByHandler = () => setSortType(sortType === DESC ? ASC : DESC);\r\n  return (\r\n    <div className={styles.bar}>\r\n      <Input\r\n        placeholder=\"Search by name...\"\r\n        icon=\"search\"\r\n        value={searchTerm}\r\n        onChange={searchTermHandler}\r\n      />\r\n      <Dropdown\r\n        placeholder=\"Filter by tag...\"\r\n        selection\r\n        options={allUniqSaladTags.map(tag => ({ key: tag, text: tag, value: tag }))}\r\n        value={tagFilter}\r\n        onChange={tagFilterHandler}\r\n        disabled={!allUniqSaladTags.length}\r\n        clearable\r\n      />\r\n      <div className={styles.multi}>\r\n        <div className={styles.sortBy}>Sort by</div>\r\n        <Dropdown\r\n          inline\r\n          options={[\r\n            { key: CALORIES, text: CALORIES, value: CALORIES },\r\n            { key: NAME, text: NAME, value: NAME }\r\n          ]}\r\n          value={filterBy}\r\n          onChange={filterByHandler}\r\n        />\r\n        <Button\r\n          icon={`sort ${filterBy === CALORIES ? 'numeric' : 'alphabet'} ${sortType === ASC ? 'down' : 'up'}`}\r\n          circular\r\n          onClick={sortByHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolsBar.defaultProps = { data: null };\r\n\r\nToolsBar.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({})),\r\n  storeFilteredData: PropTypes.func.isRequired,\r\n  filterFn: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ToolsBar;\r\n","import axios from 'axios';\r\n\r\nexport const getSalads = async () => {\r\n  const res = await axios.get('/salads');\r\n  return res.data;\r\n};\r\n\r\nexport const getSaladById = async (id) => {\r\n  const res = await axios.get(`/salads/${id}`);\r\n  return res.data;\r\n};\r\n\r\nexport const createSalad = async (data) => {\r\n  const res = await axios.post('/salads', data);\r\n  return res.data;\r\n};\r\n\r\nexport const updateSalad = async ({ id, ...data }) => {\r\n  const res = await axios.put(`/salads/${id}`, data);\r\n  return res.data;\r\n};\r\n\r\nexport const deleteSalad = async (id) => {\r\n  const res = await axios.delete(`/salads/${id}`);\r\n  return res.data;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from 'semantic-ui-react/dist/commonjs/collections/Grid/Grid';\r\nimport styles from './Layout.module.scss';\r\n\r\nconst Layout = ({\r\n  title, tools, bottomLeft, bottomRight, bottom\r\n}) => (\r\n  <Grid celled className={styles.grid}>\r\n    <Grid.Row className={styles.firstRow}>\r\n      <Grid.Column width={11} className={styles.topFirstColumn}>\r\n        {title}\r\n      </Grid.Column>\r\n      <Grid.Column width={16} className={styles.topSecondColumn}>{tools}</Grid.Column>\r\n    </Grid.Row>\r\n    <Grid.Row className={styles.secondRow}>\r\n      {bottom ? (\r\n        <Grid.Column className={styles.bottom}>{bottom}</Grid.Column>\r\n      ) : (\r\n        <>\r\n          <Grid.Column width={11} className={styles.bottomLeftColumn}>{bottomLeft}</Grid.Column>\r\n          <Grid.Column width={5}>{bottomRight}</Grid.Column>\r\n        </>\r\n      )}\r\n    </Grid.Row>\r\n  </Grid>\r\n);\r\n\r\nLayout.defaultProps = {\r\n  bottomLeft: null,\r\n  bottomRight: null,\r\n  bottom: null,\r\n  tools: null\r\n};\r\n\r\nLayout.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  bottomLeft: PropTypes.element,\r\n  bottomRight: PropTypes.element,\r\n  tools: PropTypes.element,\r\n  bottom: PropTypes.element\r\n};\r\n\r\nexport default Layout;\r\n","import { CALORIES, ASC } from '../../constants/constants';\r\n\r\nexport const caloriesReducer = ingredients => ingredients.reduce((ttl, curr) => ttl + curr.calories, 0);\r\n\r\nconst saladsFilter = (data, {\r\n  searchTerm, tagFilter, filterBy, sortType\r\n}) => data\r\n  .filter(({ name }) => name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  .filter(({ tags }) => (tagFilter ? tags.includes(tagFilter) : true))\r\n  .sort((a, b) => {\r\n    let result = 0;\r\n    if (filterBy === CALORIES) {\r\n      const itemA = caloriesReducer(a.ingredients);\r\n      const itemB = caloriesReducer(b.ingredients);\r\n      result = sortType === ASC ? itemA - itemB : itemB - itemA;\r\n    } else {\r\n      const itemA = a.name.toLowerCase();\r\n      const itemB = b.name.toLowerCase();\r\n      result = sortType === ASC ? itemA.localeCompare(itemB) : itemB.localeCompare(itemA);\r\n    }\r\n    return result;\r\n  });\r\n\r\nexport default saladsFilter;\r\n","import { useState, useEffect } from 'react';\r\nimport { get } from 'lodash';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useIsMounted from './isMounted';\r\n\r\nfunction useFetching(fetchFn, fetchOnQ = false) {\r\n  const setStateIfMounted = useIsMounted();\r\n  const [shouldFetch, setShouldFetch] = useState(!fetchOnQ);\r\n  const [data, setData] = useState(null);\r\n  const [showLoader, shouldShowLoader] = useState(true);\r\n  const [loading, setLoading] = useState(!fetchOnQ);\r\n  const history = useHistory();\r\n\r\n  const fetch = (withLoader) => {\r\n    setStateIfMounted(shouldShowLoader, !!withLoader);\r\n    setStateIfMounted(setShouldFetch, true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function asyncFetch() {\r\n      if (shouldFetch) {\r\n        try {\r\n          if (showLoader) setLoading(true);\r\n          const response = await fetchFn();\r\n          setStateIfMounted(setData, response);\r\n        } catch (error) {\r\n          if (get(error, 'response.status') === 404) history.push('/salads');\r\n        } finally {\r\n          setStateIfMounted(setLoading, false);\r\n          setStateIfMounted(setShouldFetch, false);\r\n          setStateIfMounted(shouldShowLoader, true);\r\n        }\r\n      }\r\n    }\r\n    asyncFetch();\r\n  }, [shouldFetch]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return [data, loading, fetch, setData];\r\n}\r\n\r\nexport default useFetching;\r\n","import { useState } from 'react';\r\n\r\nfunction useHover() {\r\n  const [itemHovered, setItemHovered] = useState(null);\r\n\r\n  const mouseEnterHandler = id => () => setItemHovered(id);\r\n\r\n  const onMouseLeave = () => setItemHovered(null);\r\n\r\n  return [itemHovered, mouseEnterHandler, onMouseLeave];\r\n}\r\n\r\nexport default useHover;\r\n","import React from 'react';\r\nimport Dimmer from 'semantic-ui-react/dist/commonjs/modules/Dimmer/Dimmer';\r\nimport Spinner from 'semantic-ui-react/dist/commonjs/elements/Loader/Loader';\r\nimport styles from './Loader.module.scss';\r\n\r\nconst Loader = () => (\r\n  <Dimmer active inverted>\r\n    <Spinner size=\"large\" className={styles.loader} />\r\n  </Dimmer>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Segment from 'semantic-ui-react/dist/commonjs/elements/Segment/Segment';\r\n\r\nconst EmptyPlaceholder = ({ filteredData, data, itemName }) => (\r\n  <>\r\n    {(!data || !data.length) && (\r\n      <Segment>\r\n        {`Create new ${itemName.toLowerCase()}`}\r\n      </Segment>\r\n    )}\r\n    {(filteredData.length === 0 && data && data.length !== 0) && (\r\n      <Segment>\r\n        No results found\r\n      </Segment>\r\n    )}\r\n  </>\r\n);\r\n\r\nEmptyPlaceholder.defaultProps = { data: null };\r\n\r\nEmptyPlaceholder.propTypes = {\r\n  filteredData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n  itemName: PropTypes.string.isRequired\r\n};\r\n\r\nexport default EmptyPlaceholder;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TopBar.module.scss';\r\n\r\nconst TopBar = ({ left, right }) => (\r\n  <div className={styles.topBar}>\r\n    {left}\r\n    {right}\r\n  </div>\r\n);\r\n\r\nTopBar.propTypes = {\r\n  left: PropTypes.element.isRequired,\r\n  right: PropTypes.element.isRequired\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { find } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport Item from 'semantic-ui-react/dist/commonjs/views/Item/Item';\r\nimport Header from 'semantic-ui-react/dist/commonjs/elements/Header/Header';\r\nimport Button from 'semantic-ui-react/dist/commonjs/elements/Button/Button';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport SaladIngredientsList from './SaladIngredientsList';\r\nimport ToolsBar from '../ToolsBar/ToolsBar';\r\nimport { getSalads, deleteSalad } from '../../services/saladService';\r\nimport Layout from '../Layout/Layout';\r\nimport salad1 from '../../media/salad1.png';\r\nimport salad2 from '../../media/salad2.png';\r\nimport styles from './Salads.module.scss';\r\nimport saladsFilter from './saladsFilter';\r\nimport useFetching from '../../hooks/Fetching';\r\nimport useHover from '../../hooks/Hover';\r\nimport Loader from '../Loader/Loader';\r\nimport EmptyPlaceholder from '../EmptyPlaceholder/EmptyPlaceholder';\r\nimport TopBar from '../Layout/TopBar';\r\n\r\nconst Salads = ({ history }) => {\r\n  const [salads, loading, fetchSalads] = useFetching(getSalads);\r\n  const [activeSaladId, setActiveSaladId] = useState(null);\r\n  const activeSalad = useMemo(\r\n    () => find(salads, ['id', activeSaladId]),\r\n    [activeSaladId] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n  const [filteredSalads, setFilteredSalads] = useState(salads || []);\r\n  const [itemHovered, mouseEnterHandler, onMouseLeave] = useHover();\r\n\r\n  useEffect(() => {\r\n    if (!find(filteredSalads, ['id', activeSaladId])) setActiveSaladId(null);\r\n  }, [filteredSalads]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onAddNew = () => history.push('/salads/new');\r\n  const activeHandler = id => () => setActiveSaladId(activeSaladId === id ? null : id);\r\n  const editClickHandler = id => () => history.push(`/salads/${id}`);\r\n  const saladDeleteHandler = id => async () => {\r\n    const res = await deleteSalad(id);\r\n    if (res) fetchSalads();\r\n  };\r\n  return (\r\n    <Layout\r\n      title=\"SALADS\"\r\n      tools={(\r\n        <TopBar\r\n          left={(\r\n            <div className={styles.newBtn}>\r\n              <Button\r\n                icon=\"add\"\r\n                label={{ basic: true, content: 'New salad' }}\r\n                labelPosition=\"right\"\r\n                onClick={onAddNew}\r\n              />\r\n            </div>\r\n          )}\r\n          right={(\r\n            <ToolsBar\r\n              data={salads}\r\n              storeFilteredData={setFilteredSalads}\r\n              filterFn={saladsFilter}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n      bottomLeft={loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={styles.items}>\r\n          {filteredSalads && !!filteredSalads.length ? (\r\n            <Item.Group divided>\r\n              {filteredSalads.map(({\r\n                id, name, ingredients, tags\r\n              }, index) => (\r\n                <ListItem\r\n                  key={id}\r\n                  title={name}\r\n                  tags={tags}\r\n                  onClick={activeHandler(id)}\r\n                  activeClassName={activeSaladId === id ? styles.active : ''}\r\n                  onMouseEnter={mouseEnterHandler(id)}\r\n                  onMouseLeave={onMouseLeave}\r\n                  image={[salad1, salad2][index % 2]}\r\n                  description={(\r\n                    ingredients.length\r\n                      ? `Ingredients: ${ingredients.map((ingredient => ingredient.name)).join(', ')}`\r\n                      : 'No ingredients'\r\n                  )}\r\n                  statistic={ingredients.reduce((ttl, curr) => ttl + curr.calories, 0)}\r\n                  hovered={itemHovered === id}\r\n                  onEdit={editClickHandler(id)}\r\n                  onDelete={saladDeleteHandler(id)}\r\n                />\r\n              ))}\r\n            </Item.Group>\r\n          ) : (\r\n            <EmptyPlaceholder\r\n              filteredData={filteredSalads}\r\n              data={salads}\r\n              itemName=\"salad\"\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      bottomRight={activeSalad && (\r\n        <div>\r\n          <Header>{activeSalad.name}</Header>\r\n          {!activeSalad.ingredients.length ? (\r\n            <div>No ingredients</div>\r\n          ) : (\r\n            <SaladIngredientsList activeSalad={activeSalad} />\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nSalads.propTypes = {\r\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired\r\n};\r\n\r\nexport default Salads;\r\n","import axios from 'axios';\r\n\r\nexport const getIngredients = async () => {\r\n  const res = await axios.get('/ingredients');\r\n  return res.data;\r\n};\r\n\r\nexport const getIngredientById = async (id) => {\r\n  const res = await axios.get(`/ingredients/${id}`);\r\n  return res.data;\r\n};\r\n\r\nexport const createIngredient = async (data) => {\r\n  const res = await axios.post('/ingredients', data);\r\n  return res.data;\r\n};\r\n\r\nexport const updateIngredient = async (id, data) => {\r\n  const res = await axios.put(`/ingredients/${id}`, data);\r\n  return res.data;\r\n};\r\n\r\nexport const deleteIngredient = async (id) => {\r\n  const res = await axios.delete(`/ingredients/${id}`);\r\n  return res.data;\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { find, remove } from 'lodash';\r\n\r\nconst getSaladIngredient = (id, ingredientsArray) => find(ingredientsArray, ['id', id]);\r\n\r\nfunction useCheckboxes(existingIngredients, alreadySelectedIngredients) {\r\n  const [saladIngredients, setSaladIngredients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (alreadySelectedIngredients) {\r\n      setSaladIngredients(alreadySelectedIngredients);\r\n    }\r\n  }, [alreadySelectedIngredients]);\r\n\r\n  const checkIfSelected = id => !!getSaladIngredient(id, saladIngredients);\r\n  const checkboxClickHandler = id => () => {\r\n    const newSaladIngredients = [...saladIngredients.map(selectedIngredient => ({ ...selectedIngredient }))];\r\n    const ingredient = getSaladIngredient(id, existingIngredients);\r\n    if (checkIfSelected(id)) {\r\n      remove(newSaladIngredients, selectedIngredient => selectedIngredient.id === id);\r\n    } else {\r\n      newSaladIngredients.push(ingredient);\r\n    }\r\n    setSaladIngredients(newSaladIngredients);\r\n  };\r\n  return [saladIngredients, checkIfSelected, checkboxClickHandler];\r\n}\r\n\r\nexport default useCheckboxes;\r\n","import { CALORIES, ASC } from '../../constants/constants';\r\n\r\nconst ingredientsFilter = (data, {\r\n  searchTerm, tagFilter, filterBy, sortType\r\n}) => data\r\n  .filter(({ name }) => name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  .filter(({ tags }) => (tagFilter ? tags.includes(tagFilter) : true))\r\n  .sort((a, b) => {\r\n    let result = 0;\r\n    if (filterBy === CALORIES) {\r\n      result = sortType === ASC ? a.calories - b.calories : b.calories - a.calories;\r\n    } else {\r\n      const itemA = a.name.toLowerCase();\r\n      const itemB = b.name.toLowerCase();\r\n      result = sortType === ASC ? itemA.localeCompare(itemB) : itemB.localeCompare(itemA);\r\n    }\r\n    return result;\r\n  });\r\n\r\nexport default ingredientsFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'semantic-ui-react/dist/commonjs/elements/Button/Button';\r\nimport styles from './FormButtons.module.scss';\r\n\r\nconst FormButtons = ({\r\n  backBtnText, onBack, onSave, saving, saveDisabled\r\n}) => (\r\n  <div className={styles.formButtons}>\r\n    <Button\r\n      icon=\"arrow left\"\r\n      label={{ basic: true, content: backBtnText }}\r\n      labelPosition=\"right\"\r\n      onClick={onBack}\r\n    />\r\n    <Button\r\n      icon=\"save outline\"\r\n      disabled={saveDisabled}\r\n      label={{ basic: true, content: 'Save' }}\r\n      onClick={onSave}\r\n      loading={saving}\r\n      labelPosition=\"left\"\r\n      className={styles.saveBtn}\r\n    />\r\n  </div>\r\n);\r\n\r\nFormButtons.propTypes = {\r\n  backBtnText: PropTypes.string.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  saving: PropTypes.bool.isRequired,\r\n  saveDisabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default FormButtons;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Segment from 'semantic-ui-react/dist/commonjs/elements/Segment/Segment';\r\nimport Grid from 'semantic-ui-react/dist/commonjs/collections/Grid/Grid';\r\nimport styles from './FormInfo.module.scss';\r\n\r\nconst FormInfo = ({ infoPieces }) => (\r\n  <Grid columns={1} className={styles.grid}>\r\n    {infoPieces.map(infoPeace => (\r\n      <Grid.Row key={infoPeace.textParts.join()}>\r\n        <Grid.Column>\r\n          <Segment basic>\r\n            {infoPeace.textParts.map((part, index) => {\r\n              let content = part;\r\n              if (index === infoPeace.accentPart) {\r\n                content = (\r\n                  <>\r\n                    {' '}\r\n                    <span>{part}</span>\r\n                    {' '}\r\n                  </>\r\n                );\r\n              }\r\n              return <Fragment key={part}>{content}</Fragment>;\r\n            })}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nFormInfo.propTypes = {\r\n  infoPieces: PropTypes.arrayOf(PropTypes.shape({\r\n    accentPart: PropTypes.number,\r\n    textParts: PropTypes.arrayOf(PropTypes.string)\r\n  })).isRequired\r\n};\r\n\r\nexport default FormInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Image from 'semantic-ui-react/dist/commonjs/elements/Image/Image';\r\nimport Label from 'semantic-ui-react/dist/commonjs/elements/Label/Label';\r\nimport Segment from 'semantic-ui-react/dist/commonjs/elements/Segment/Segment';\r\nimport Grid from 'semantic-ui-react/dist/commonjs/collections/Grid/Grid';\r\nimport Checkbox from 'semantic-ui-react/dist/commonjs/modules/Checkbox/Checkbox';\r\nimport Header from 'semantic-ui-react/dist/commonjs/elements/Header/Header';\r\nimport CaloriesNumber from '../CaloriesNumber/CaloriesNumber';\r\nimport styles from './CheckListItem.module.scss';\r\n\r\nconst CheckListItem = ({\r\n  checkboxDisabled, checked, onChange, image, name, tags, calories\r\n}) => (\r\n  <Segment>\r\n    <Grid columns=\"equal\">\r\n      <Grid.Column width={1} textAlign=\"center\" verticalAlign=\"middle\">\r\n        <Checkbox disabled={checkboxDisabled} checked={checked} onChange={onChange} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} className={styles.imageColumn}>\r\n        <Image src={image} rounded />\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <Grid.Row>\r\n          <Header>{name}</Header>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          {tags.map(tag => <Label key={tag}>{tag}</Label>)}\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n      <Grid.Column textAlign=\"right\" verticalAlign=\"middle\">\r\n        <CaloriesNumber size=\"mini\" num={calories} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  </Segment>\r\n);\r\n\r\nCheckListItem.defaultProps = { checkboxDisabled: false };\r\n\r\nCheckListItem.propTypes = {\r\n  checkboxDisabled: PropTypes.bool,\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  calories: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CheckListItem;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useMultiselect = (defaultValue = '', defaultOptions = [], assignedValue = null) => {\r\n  const [options, setOptions] = useState(defaultOptions);\r\n  const [ddValue, setDdValue] = useState(defaultValue);\r\n\r\n  useEffect(() => {\r\n    if (![null, undefined].includes(assignedValue)) {\r\n      setOptions([...assignedValue.map(tag => ({ key: tag, value: tag, text: tag })), ...options]);\r\n      setDdValue(assignedValue);\r\n    }\r\n  }, [assignedValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onAddItem = (event, { value }) => setOptions([{ text: value, value }, ...options]);\r\n  const onDdValueChange = (event, { value }) => setDdValue(value);\r\n  return [ddValue, onDdValueChange, options, onAddItem];\r\n};\r\n\r\nexport default useMultiselect;\r\n","import { useEffect, useState } from 'react';\r\nimport { isEqual } from 'lodash';\r\n\r\nfunction useFormStateChangeChecker(startingState, currentState) {\r\n  const [saveDisabled, setSaveDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setSaveDisabled(isEqual(currentState, startingState));\r\n  }, [currentState, startingState]);\r\n\r\n  return saveDisabled;\r\n}\r\n\r\nexport default useFormStateChangeChecker;\r\n","import { useState } from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport { useDeepCompareEffectNoCheck } from 'use-deep-compare-effect';\r\n\r\nfunction useSimpleFormValidation(data) {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useDeepCompareEffectNoCheck(() => {\r\n    if (!isEmpty(errors)) setErrors({});\r\n  }, [data]);\r\n\r\n  const checkIfFormValid = () => {\r\n    let noErrors = true;\r\n    const allErrors = {};\r\n    Object.keys(data).forEach((inputName) => {\r\n      if (!data[inputName]) {\r\n        allErrors[inputName] = true;\r\n        noErrors = false;\r\n      }\r\n    });\r\n    setErrors(allErrors);\r\n    return noErrors;\r\n  };\r\n  return [errors, checkIfFormValid];\r\n}\r\n\r\nexport default useSimpleFormValidation;\r\n","import React, { useState } from 'react';\r\nimport { get } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'semantic-ui-react/dist/commonjs/collections/Form/Form';\r\nimport Segment from 'semantic-ui-react/dist/commonjs/elements/Segment/Segment';\r\nimport Grid from 'semantic-ui-react/dist/commonjs/collections/Grid/Grid';\r\nimport useInput from '../../hooks/Input';\r\nimport { createSalad, updateSalad } from '../../services/saladService';\r\nimport { getIngredients } from '../../services/ingredientService';\r\nimport Layout from '../Layout/Layout';\r\nimport useCheckboxes from './useCheckboxes';\r\nimport useAsyncSave from '../../hooks/AsyncSave';\r\nimport ToolsBar from '../ToolsBar/ToolsBar';\r\nimport ingredientsFilter from '../Ingredients/ingredientsFilter';\r\nimport useFetching from '../../hooks/Fetching';\r\nimport Loader from '../Loader/Loader';\r\nimport FormButtons from '../FormButtons/FormButtons';\r\nimport FormInfo from '../FormInfo/FormInfo';\r\nimport TopBar from '../Layout/TopBar';\r\nimport CheckListItem from '../CheckListItem/CheckListItem';\r\nimport EmptyPlaceholder from '../EmptyPlaceholder/EmptyPlaceholder';\r\nimport useMultiselect from '../../hooks/Multiselect';\r\nimport useFormStateChangeChecker from '../../hooks/FormStateChangeChecker';\r\nimport useSimpleFormValidation from '../../hooks/FormValidation';\r\nimport { CREATE, EDIT } from '../../constants/constants';\r\nimport styles from './SaladForm.module.scss';\r\n\r\nconst SaladForm = ({\r\n  history, mode, data, loading\r\n}) => {\r\n  const [ingredients, loadingIngredients] = useFetching(getIngredients);\r\n  const [filteredIngredients, setFilteredIngredients] = useState(ingredients || []);\r\n  const [saladName, onSaladNameChange] = useInput('', get(data, 'name'));\r\n  const [\r\n    saladTags, onSaladTagsChange, options, onAddItem\r\n  ] = useMultiselect([], [{ key: '1', text: 'gluten-free', value: 'gluten-free' }], get(data, 'tags'));\r\n  const [\r\n    saladIngredients, checkIfSelected, checkboxClickHandler\r\n  ] = useCheckboxes(ingredients, get(data, 'ingredients'));\r\n  const saveDisabled = useFormStateChangeChecker(\r\n    { name: get(data, 'name', ''), tags: get(data, 'tags', []), ingredients: get(data, 'ingredients', []) },\r\n    { name: saladName, tags: saladTags, ingredients: saladIngredients }\r\n  );\r\n  const [errors, checkIfFormValid] = useSimpleFormValidation({ name: saladName });\r\n  const onBack = () => history.push('/salads');\r\n\r\n  const [creating, create] = useAsyncSave(\r\n    async () => createSalad({ name: saladName, tags: saladTags, ingredients: saladIngredients }),\r\n    onBack,\r\n    checkIfFormValid\r\n  );\r\n  const [updating, update] = useAsyncSave(\r\n    async () => updateSalad({\r\n      id: data.id, name: saladName, tags: saladTags, ingredients: saladIngredients\r\n    }),\r\n    onBack,\r\n    checkIfFormValid\r\n  );\r\n\r\n  const onSave = async () => (mode === EDIT ? update() : create());\r\n\r\n  return (\r\n    <Layout\r\n      title={mode === CREATE ? 'New salad' : 'Edit salad'}\r\n      tools={(\r\n        <FormButtons\r\n          backBtnText=\"Salads\"\r\n          onBack={onBack}\r\n          onSave={onSave}\r\n          saving={creating || updating}\r\n          saveDisabled={saveDisabled}\r\n        />\r\n      )}\r\n      bottomRight={(\r\n        <FormInfo\r\n          infoPieces={[\r\n            {\r\n              accentPart: 1,\r\n              textParts: ['Multiple', 'name', 'is required. It doesn\\'t have to be unique. It\\'s required']\r\n            },\r\n            {\r\n              accentPart: 1,\r\n              textParts: [\r\n                'Multiple custom', 'tags', 'can be added and/or removed. Salads can be filtered by them. They are not required.'\r\n              ]\r\n            },\r\n            {\r\n              accentPart: 0,\r\n              textParts: [\r\n                'Ingrediens', 'can be added by clicking on a checkbox. They can be removed by unchecking. They are not required.'\r\n              ]\r\n            }\r\n          ]}\r\n        />\r\n      )}\r\n      bottomLeft={(\r\n        <Grid columns={1} className={styles.grid}>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Input\r\n                  label=\"Name\"\r\n                  required\r\n                  value={saladName}\r\n                  onChange={onSaladNameChange}\r\n                  loading={loading}\r\n                  disabled={loading}\r\n                  error={errors.name}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Select\r\n                  loading={loading}\r\n                  disabled={loading}\r\n                  label=\"Tags\"\r\n                  value={saladTags}\r\n                  options={options}\r\n                  search\r\n                  selection\r\n                  multiple\r\n                  allowAdditions\r\n                  onAddItem={onAddItem}\r\n                  onChange={onSaladTagsChange}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <TopBar\r\n                left={<div className={styles.ingredientsLabel}>Ingredients</div>}\r\n                right={(\r\n                  <ToolsBar\r\n                    data={ingredients}\r\n                    storeFilteredData={setFilteredIngredients}\r\n                    filterFn={ingredientsFilter}\r\n                  />\r\n                )}\r\n              />\r\n              <Segment.Group className={styles.checkList}>\r\n                {loadingIngredients ? (\r\n                  <Loader />\r\n                ) : (\r\n                  <>\r\n                    {filteredIngredients.length ? (\r\n                      filteredIngredients.map(({\r\n                        id, name, image, tags, calories\r\n                      }) => (\r\n                        <CheckListItem\r\n                          key={id}\r\n                          checkboxDisabled={loading}\r\n                          checked={checkIfSelected(id)}\r\n                          onChange={checkboxClickHandler(id)}\r\n                          image={image}\r\n                          name={name}\r\n                          tags={tags}\r\n                          calories={calories}\r\n                        />\r\n                      ))\r\n                    ) : (\r\n                      <EmptyPlaceholder\r\n                        filteredData={filteredIngredients}\r\n                        data={get(data, 'ingredients', [])}\r\n                        itemName=\"ingredient\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Segment.Group>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nSaladForm.defaultProps = { data: null, loading: null };\r\n\r\nSaladForm.propTypes = {\r\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\r\n  mode: PropTypes.oneOf([CREATE, EDIT]).isRequired,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n    ingredients: PropTypes.arrayOf(PropTypes.shape({}))\r\n  }),\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default SaladForm;\r\n","import React from 'react';\r\nimport SaladForm from './SaladForm';\r\nimport { CREATE } from '../../constants/constants';\r\n\r\nconst NewSalad = props => <SaladForm mode={CREATE} {...props} />;\r\n\r\nexport default NewSalad;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaladForm from './SaladForm';\r\nimport { getSaladById } from '../../services/saladService';\r\nimport useFetching from '../../hooks/Fetching';\r\nimport { EDIT } from '../../constants/constants';\r\n\r\nconst EditSalad = ({ match, ...props }) => {\r\n  const [salad, loading] = useFetching(getSaladById.bind(null, match.params.id));\r\n  return <SaladForm mode={EDIT} loading={loading} data={salad} {...props} />;\r\n};\r\n\r\nEditSalad.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({ id: PropTypes.string })\r\n  }).isRequired\r\n};\r\n\r\nexport default EditSalad;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Item from 'semantic-ui-react/dist/commonjs/views/Item/Item';\r\nimport Button from 'semantic-ui-react/dist/commonjs/elements/Button/Button';\r\nimport { getIngredients, deleteIngredient } from '../../services/ingredientService';\r\nimport Layout from '../Layout/Layout';\r\nimport TopBar from '../Layout/TopBar';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport ToolsBar from '../ToolsBar/ToolsBar';\r\nimport ingredientsFilter from './ingredientsFilter';\r\nimport useFetching from '../../hooks/Fetching';\r\nimport useHover from '../../hooks/Hover';\r\nimport Loader from '../Loader/Loader';\r\nimport EmptyPlaceholder from '../EmptyPlaceholder/EmptyPlaceholder';\r\nimport styles from './Ingredients.module.scss';\r\n\r\nconst Ingredients = ({ history }) => {\r\n  const [ingredients, loading, fetchIngredients] = useFetching(getIngredients);\r\n  const [filteredIngredients, setFilteredIngredients] = useState(ingredients || []);\r\n  const [itemHovered, mouseEnterHandler, onMouseLeave] = useHover();\r\n\r\n  const onAddNew = () => history.push('/ingredients/new');\r\n  const editClickHandler = id => () => history.push(`/ingredients/${id}`);\r\n  const ingredientDeleteHandler = id => async () => {\r\n    const res = await deleteIngredient(id);\r\n    if (res) fetchIngredients();\r\n  };\r\n  return (\r\n    <Layout\r\n      title=\"Ingredients\"\r\n      tools={(\r\n        <TopBar\r\n          left={(\r\n            <div className={styles.newBtn}>\r\n              <Button\r\n                icon=\"add\"\r\n                label={{ basic: true, content: 'New ingredient' }}\r\n                labelPosition=\"right\"\r\n                onClick={onAddNew}\r\n              />\r\n            </div>\r\n          )}\r\n          right={(\r\n            <ToolsBar\r\n              data={ingredients}\r\n              storeFilteredData={setFilteredIngredients}\r\n              filterFn={ingredientsFilter}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n      bottom={loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={styles.items}>\r\n          {filteredIngredients && filteredIngredients.length ? (\r\n            <Item.Group divided>\r\n              {filteredIngredients.map(({\r\n                id, name, image, tags, calories\r\n              }) => (\r\n                <ListItem\r\n                  key={id}\r\n                  onMouseEnter={mouseEnterHandler(id)}\r\n                  onMouseLeave={onMouseLeave}\r\n                  image={image}\r\n                  title={name}\r\n                  statistic={calories}\r\n                  tags={tags}\r\n                  hovered={itemHovered === id}\r\n                  onEdit={editClickHandler(id)}\r\n                  onDelete={ingredientDeleteHandler(id)}\r\n                />\r\n              ))}\r\n            </Item.Group>\r\n          ) : (\r\n            <EmptyPlaceholder\r\n              filteredData={filteredIngredients}\r\n              data={ingredients}\r\n              itemName=\"ingredient\"\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nIngredients.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func\r\n  }).isRequired\r\n};\r\n\r\nexport default Ingredients;\r\n","import React from 'react';\r\nimport { get } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'semantic-ui-react/dist/commonjs/collections/Form/Form';\r\nimport Grid from 'semantic-ui-react/dist/commonjs/collections/Grid/Grid';\r\nimport useInput from '../../hooks/Input';\r\nimport useMultiselect from '../../hooks/Multiselect';\r\nimport { createIngredient, updateIngredient } from '../../services/ingredientService';\r\nimport Layout from '../Layout/Layout';\r\nimport useAsyncSave from '../../hooks/AsyncSave';\r\nimport { CREATE, EDIT } from '../../constants/constants';\r\nimport useSimpleFormValidation from '../../hooks/FormValidation';\r\nimport useFormStateChangeChecker from '../../hooks/FormStateChangeChecker';\r\nimport FormInfo from '../FormInfo/FormInfo';\r\nimport FormButtons from '../FormButtons/FormButtons';\r\nimport styles from './IngredientsForm.module.scss';\r\n\r\nconst IngredientsForm = ({\r\n  history, mode, data, loading\r\n}) => {\r\n  const [ingredientName, onIngredientNameChange] = useInput('', get(data, 'name'));\r\n  const [\r\n    ingredienTags, onIngredienTagsChange, options, onAddItem\r\n  ] = useMultiselect([], [{ key: '1', text: 'gluten-free', value: 'gluten-free' }], get(data, 'tags'));\r\n  const [ingredientImage, onIngredientImageChange] = useInput('', get(data, 'image'));\r\n  const [ingredientCalories, onIngredientCaloriesChange] = useInput('', get(data, 'calories'));\r\n  const [errors, checkIfFormValid] = useSimpleFormValidation({\r\n    name: ingredientName,\r\n    image: ingredientImage,\r\n    calories: ingredientCalories\r\n  });\r\n  const saveDisabled = useFormStateChangeChecker({\r\n    name: get(data, 'name', ''),\r\n    tags: get(data, 'tags', []),\r\n    image: get(data, 'image', ''),\r\n    calories: get(data, 'calories', '')\r\n  }, {\r\n    name: ingredientName,\r\n    tags: ingredienTags,\r\n    image: ingredientImage,\r\n    calories: !parseInt(ingredientCalories, 10) && parseInt(ingredientCalories, 10) !== 0 ? '' : parseInt(ingredientCalories, 10)\r\n  });\r\n  const onBack = () => history.push('/ingredients');\r\n\r\n  const [saving, onSave] = useAsyncSave(async () => {\r\n    let res = null;\r\n    const fetchData = {\r\n      name: ingredientName,\r\n      tags: ingredienTags,\r\n      image: ingredientImage,\r\n      calories: parseInt(ingredientCalories, 10)\r\n    };\r\n    if (mode === EDIT && data) {\r\n      res = await updateIngredient(data.id, fetchData);\r\n    } else {\r\n      res = await createIngredient(fetchData);\r\n    }\r\n    return res;\r\n  }, onBack, checkIfFormValid);\r\n\r\n  return (\r\n    <Layout\r\n      title={mode === CREATE ? 'New ingredient' : 'Edit ingredient'}\r\n      tools={(\r\n        <FormButtons\r\n          backBtnText=\"Ingredients\"\r\n          onBack={onBack}\r\n          onSave={onSave}\r\n          saving={saving}\r\n          saveDisabled={saveDisabled}\r\n        />\r\n      )}\r\n      bottomRight={(\r\n        <FormInfo\r\n          infoPieces={[\r\n            {\r\n              accentPart: 1,\r\n              textParts: ['Ingredient', 'name', 'is required. It doesn\\'t have to be unique. It\\'s required']\r\n            },\r\n            {\r\n              accentPart: 1,\r\n              textParts: [\r\n                'Multiple custom',\r\n                'tags',\r\n                'can be added and/or removed. Ingredients can be filtered by them. They are not required.'\r\n              ]\r\n            },\r\n            {\r\n              accentPart: 1,\r\n              textParts: ['Link to the ingredient', 'image', 'is required.']\r\n            },\r\n            {\r\n              accentPart: 1,\r\n              textParts: ['Ingredient', 'calories', 'is required. Only numbers are acceptable.']\r\n            }\r\n          ]}\r\n        />\r\n      )}\r\n      bottomLeft={(\r\n        <Grid columns={1} className={styles.form}>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Input\r\n                  label=\"Name\"\r\n                  required\r\n                  value={ingredientName}\r\n                  onChange={onIngredientNameChange}\r\n                  loading={loading}\r\n                  disabled={loading}\r\n                  error={errors.name}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Select\r\n                  loading={loading}\r\n                  disabled={loading}\r\n                  label=\"Tags\"\r\n                  value={ingredienTags}\r\n                  options={options}\r\n                  search\r\n                  selection\r\n                  multiple\r\n                  allowAdditions\r\n                  onAddItem={onAddItem}\r\n                  onChange={onIngredienTagsChange}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Input\r\n                  required\r\n                  label=\"Image (link)\"\r\n                  value={ingredientImage}\r\n                  onChange={onIngredientImageChange}\r\n                  loading={loading}\r\n                  disabled={loading}\r\n                  error={errors.image}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Input\r\n                  required\r\n                  label=\"Calories\"\r\n                  type=\"number\"\r\n                  value={ingredientCalories}\r\n                  onChange={onIngredientCaloriesChange}\r\n                  loading={loading}\r\n                  disabled={loading}\r\n                  error={errors.calories}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nIngredientsForm.defaultProps = { data: null, loading: null };\r\n\r\nIngredientsForm.propTypes = {\r\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\r\n  mode: PropTypes.oneOf([CREATE, EDIT]).isRequired,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n    image: PropTypes.string,\r\n    calories: PropTypes.number\r\n  }),\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default IngredientsForm;\r\n","import React from 'react';\r\nimport IngredientsForm from './IngredientsForm';\r\nimport { CREATE } from '../../constants/constants';\r\n\r\nconst NewIngredient = props => <IngredientsForm mode={CREATE} {...props} />;\r\n\r\nexport default NewIngredient;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IngredientsForm from './IngredientsForm';\r\nimport { getIngredientById } from '../../services/ingredientService';\r\nimport useFetching from '../../hooks/Fetching';\r\nimport { EDIT } from '../../constants/constants';\r\n\r\nconst EditIngredient = ({ match, ...props }) => {\r\n  const [ingredient, loading] = useFetching(getIngredientById.bind(null, match.params.id));\r\n  return (\r\n    <IngredientsForm\r\n      mode={EDIT}\r\n      loading={loading}\r\n      data={ingredient}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nEditIngredient.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({ id: PropTypes.string })\r\n  }).isRequired\r\n};\r\n\r\nexport default EditIngredient;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Menu from 'semantic-ui-react/dist/commonjs/collections/Menu/Menu';\r\nimport Header from 'semantic-ui-react/dist/commonjs/elements/Header/Header';\r\nimport Container from 'semantic-ui-react/dist/commonjs/elements/Container/Container';\r\nimport vegetables from '../../media/veg.png';\r\nimport styles from './MenuBar.module.scss';\r\n\r\nconst MenuBar = () => (\r\n  <div>\r\n    <div\r\n      style={{ backgroundImage: `url(${vegetables})` }}\r\n      className={styles.topTapeImage}\r\n    />\r\n    <Container>\r\n      <Menu secondary className={styles.menubar}>\r\n        <Menu.Item>\r\n          <Header as=\"h3\">\r\n            <span className={styles.firstColor}>Mind</span>\r\n            <span className={styles.secondColor}>salad</span>\r\n            <span className={styles.thirdColor}>bar</span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item as={NavLink} to=\"/salads\">Salads</Menu.Item>\r\n          <Menu.Item as={NavLink} to=\"/ingredients\">Ingredients</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default MenuBar;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router, Switch, Route, Redirect\r\n} from 'react-router-dom';\r\nimport Container from 'semantic-ui-react/dist/commonjs/elements/Container/Container';\r\nimport Salads from './components/Salads/Salads';\r\nimport NewSalad from './components/Salads/NewSalad';\r\nimport EditSalad from './components/Salads/EditSalad';\r\nimport Ingredients from './components/Ingredients/Ingredients';\r\nimport NewIngredient from './components/Ingredients/NewIngredient';\r\nimport EditIngredient from './components/Ingredients/EditIngredient';\r\nimport MenuBar from './components/MenuBar/MenuBar';\r\n\r\nconst AppRouter = () => (\r\n  <Router>\r\n    <MenuBar />\r\n    <main>\r\n      <Container>\r\n        <Switch>\r\n          <Route exact path=\"/salads/new\" component={NewSalad} />\r\n          <Route exact path=\"/salads/:id\" component={EditSalad} />\r\n          <Route exact path=\"/salads\" component={Salads} />\r\n          <Route exact path=\"/ingredients/new\" component={NewIngredient} />\r\n          <Route exact path=\"/ingredients/:id\" component={EditIngredient} />\r\n          <Route exact path=\"/ingredients\" component={Ingredients} />\r\n          <Redirect from=\"/\" to=\"/salads\" />\r\n        </Switch>\r\n      </Container>\r\n    </main>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { toast } from 'react-semantic-toasts';\r\n\r\nconst useToast = () => {\r\n  const activeToast = useRef(false);\r\n  const [toastType, setToastType] = useState(null);\r\n\r\n  const onClose = () => {\r\n    activeToast.current = false;\r\n    setToastType(null);\r\n  };\r\n\r\n  function getOptions(type) {\r\n    switch (type) {\r\n      case 'error':\r\n        return {\r\n          type: 'error',\r\n          title: 'Error',\r\n          description: 'Unknown server error',\r\n          animation: 'fly left',\r\n          time: 0,\r\n          onClose\r\n        };\r\n      case 'create':\r\n        return {\r\n          type: 'success',\r\n          title: 'Success',\r\n          description: 'Successfully added',\r\n          animation: 'fly right',\r\n          time: 2000,\r\n          onClose\r\n        };\r\n      case 'edit':\r\n        return {\r\n          type: 'success',\r\n          title: 'Success',\r\n          description: 'Successfully updated',\r\n          animation: 'fly right',\r\n          time: 2000,\r\n          onClose\r\n        };\r\n      case 'not-found':\r\n        return {\r\n          type: 'error',\r\n          title: 'Not found',\r\n          description: 'Page not found',\r\n          animation: 'fly right',\r\n          time: 2000,\r\n          onClose\r\n        };\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (toastType && !activeToast.current) {\r\n      activeToast.current = true;\r\n      toast(getOptions(toastType));\r\n      setToastType(null);\r\n    }\r\n  }, [toastType]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const sendToast = type => setToastType(type);\r\n\r\n  return sendToast;\r\n};\r\n\r\nexport default useToast;\r\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { SemanticToastContainer } from 'react-semantic-toasts';\r\nimport Router from './AppRouter';\r\nimport useToast from './hooks/Toast';\r\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\r\n\r\nconst App = () => {\r\n  const sendToast = useToast();\r\n\r\n  useEffect(() => {\r\n    axios.interceptors.response.use(\r\n      (response) => {\r\n        if (response.config.method === 'put' && response.status === 200) sendToast('edit');\r\n        if (response.status === 201) sendToast('create');\r\n        return response;\r\n      },\r\n      () => sendToast('error')\r\n    );\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div>\r\n      <Router />\r\n      <SemanticToastContainer position=\"bottom-left\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hover\":\"ListItem_hover__17vtS\",\"image\":\"ListItem_image__V61bt\",\"item\":\"ListItem_item__3Or1b\",\"icons\":\"ListItem_icons__3prku\",\"deleteIcon\":\"ListItem_deleteIcon__iKOhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menubar\":\"MenuBar_menubar__1YbMF\",\"topTapeImage\":\"MenuBar_topTapeImage__mSvVH\",\"firstColor\":\"MenuBar_firstColor__3ZE-c\",\"secondColor\":\"MenuBar_secondColor__JJnH8\",\"thirdColor\":\"MenuBar_thirdColor__W1pwl\"};"],"sourceRoot":""}